include:
  - local: '/.developer-vars.yml'
  - remote: 'https://gitlab.leke.cn/deployments/include/-/raw/master/.huihui-ops-vars.yml'
  - remote: 'https://gitlab.leke.cn/deployments/include/-/raw/master/maven-huihui.yml'
  - remote: 'https://gitlab.leke.cn/deployments/include/-/raw/master/sonar-huihui.yml'
  - remote: 'https://gitlab.leke.cn/deployments/include/-/raw/master/docker-image.yml'
  - remote: 'https://gitlab.leke.cn/deployments/include/-/raw/master/huihui-jar-deploy-v2.yml'


variables:
  # image group, sre define
  REGISTRY_GROUP: '$BUSINESS_NAME'
  # image name, sre define
  REGISTRY_IMAGE_JAR: '${APP_NAME}:${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}'
  # image name, sre define
  REGISTRY_IMAGE: '${APP_NAME}:${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}'
  # k8s config, sre define
  KUBECONFIG: '/config'
  # k8s deployments, sre define
  CD_REPO: 'gitlab.leke.cn/deployments/${BUSINESS_NAME}/backend/${APP_NAME}.git'
  # GM Image, by include '.huihui-ops-vars.yml'
  REGISTRY_IMAGE_JAVA: '${REGISTRY_IMAGE_JAVA_GM}'


stages:
  - maven package
  - build docker image
  - deploy to dev
  - deploy to testing
  - deploy to pre
  - deploy to prod


Maven build:
  stage: maven package
  tags:
    - k8s
  extends: .maven-build
  script:
    - mvn -DskipTests clean package -P !dev $MAVEN_OPTS


SonarQube check:
  stage: maven package
  extends: .sonarqube-check


Image build:
  stage: build docker image
  extends: .docker


dev-169:
  stage: deploy to dev
  variables:
    K8S_CLUSTER: '$INSIDE_K8S_CLUSTER'
    # sre and developer define
    ENV_NAME: 'dev-169'
    # sre define
    APP_CONFIG: '${JVM_OPTS_DEV169}'
    # sre define
    ARGO_PROJ: '${BUSINESS_NAME}-dev'
    # sre define
    CD_GIT_PATH: 'dev'
    DNS: '$DNS_DEV169'
    # nacos
    NACOS_IP: '$NACOS_IP_DEV169'
    NACOS_NS: '$NACOS_NS_DEV169'
  extends: .deploy
  only:
    - master


testing-1:
  stage: deploy to testing
  variables:
    K8S_CLUSTER: '$INSIDE_K8S_CLUSTER'
    ENV_NAME: 'testing-1'
    APP_CONFIG: '${JVM_OPTS_TESTING1}'
    ARGO_PROJ: '${BUSINESS_NAME}-dev'
    CD_GIT_PATH: 'testing'
    DNS: '$DNS_TESTING1'
    # nacos
    NACOS_IP: '$NACOS_IP_TESTING1'
    NACOS_NS: '$NACOS_NS_TESTING1'
  extends: .deploy
  only:
    - /^testing-1-.*/
    - /^hotfix-.*/
    - master


testing-2:
  stage: deploy to testing
  variables:
    K8S_CLUSTER: '$INSIDE_K8S_CLUSTER'
    ENV_NAME: 'testing-2'
    APP_CONFIG: '${JVM_OPTS_TESTING2}'
    ARGO_PROJ: '${BUSINESS_NAME}-dev'
    CD_GIT_PATH: 'testing'
    DNS: '$DNS_TESTING2'
    # nacos
    NACOS_IP: '$NACOS_IP_TESTING2'
    NACOS_NS: '$NACOS_NS_TESTING2'
  extends: .deploy
  only:
    - /^testing-2-.*/
    - /^hotfix-.*/
    - master


testing-3:
  stage: deploy to testing
  variables:
    K8S_CLUSTER: '$INSIDE_K8S_CLUSTER'
    ENV_NAME: 'testing-3'
    APP_CONFIG: '${JVM_OPTS_TESTING3}'
    ARGO_PROJ: '${BUSINESS_NAME}-dev'
    CD_GIT_PATH: 'testing'
    DNS: '$DNS_TESTING3'
    # nacos
    NACOS_IP: '$NACOS_IP_TESTING3'
    NACOS_NS: '$NACOS_NS_TESTING3'
  extends: .deploy
  only:
    - /^testing-3-.*/
    - /^hotfix-.*/
    - master


testing-4:
  stage: deploy to testing
  variables:
    K8S_CLUSTER: '$INSIDE_K8S_CLUSTER'
    ENV_NAME: 'testing-4'
    APP_CONFIG: '${JVM_OPTS_TESTING4}'
    ARGO_PROJ: '${BUSINESS_NAME}-dev'
    CD_GIT_PATH: 'testing'
    DNS: '$DNS_TESTING4'
    # nacos
    NACOS_IP: '$NACOS_IP_TESTING4'
    NACOS_NS: '$NACOS_NS_TESTING4'
  extends: .deploy
  only:
    - /^testing-4-.*/
    - /^hotfix-.*/
    - master


pre:
  stage: deploy to pre
  variables:
    K8S_CLUSTER: '$CCE2'
    ENV_NAME: 'pre'
    APP_CONFIG: '${JVM_OPTS_PRE}'
    ARGO_PROJ: '${BUSINESS_NAME}-pre'
    CD_GIT_PATH: 'pre'
    DNS: '$DNS_PRE'
    # nacos
    NACOS_IP: '$NACOS_IP_PRE'
    NACOS_NS: '$NACOS_NS_PRE'
  extends: .deploy
  only:
    - release
    - /^hotfix-.*/


prod:
  stage: deploy to prod
  variables:
    K8S_CLUSTER: '$CCE2'
    ENV_NAME: 'prod'
    APP_CONFIG: '${JVM_OPTS_PROD}'
    ARGO_PROJ: '${BUSINESS_NAME}-prod'
    CD_GIT_PATH: 'prod'
    DNS: '$DNS_PROD'
    # nacos
    NACOS_IP: '$NACOS_IP_PROD'
    NACOS_NS: '$NACOS_NS_PROD'
  extends: .deploy
  only:
    - release
    - /^hotfix-.*/
