<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.drstrong.health.product.dao.sku.StoreSkuInfoMapper">

    <resultMap id="BaseResultMap" type="com.drstrong.health.product.model.entity.sku.StoreSkuInfoEntity">
        <result column="id" property="id"/>
        <result column="sku_type" property="skuType"/>
        <result column="sku_code" property="skuCode"/>
        <result column="sku_name" property="skuName"/>
        <result column="medicine_code" property="medicineCode"/>
        <result column="store_id" property="storeId"/>
        <result column="price" property="price"/>
        <result column="sku_status" property="skuStatus"/>
        <result column="supplier_info" property="supplierInfo"
                typeHandler="com.drstrong.health.product.handler.mybatis.LongListTypeHandler"/>
        <result column="category_info" property="categoryInfo"
                typeHandler="com.drstrong.health.product.handler.mybatis.LongListTypeHandler"/>
        <result column="label_info" property="labelInfo"
                typeHandler="com.drstrong.health.product.handler.mybatis.LongListTypeHandler"/>
        <result column="prohibit_area_info" property="prohibitAreaInfo"
                typeHandler="com.drstrong.health.product.handler.mybatis.LongListTypeHandler"/>
        <result column="version" property="version"/>
        <result column="del_flag" property="delFlag"/>
        <result column="created_at" property="createdAt"/>
        <result column="created_by" property="createdBy"/>
        <result column="changed_at" property="changedAt"/>
        <result column="changed_by" property="changedBy"/>
    </resultMap>

    <sql id="Base_Column_List">
                id,
                sku_type,
                sku_code,
                sku_name,
                medicine_code,
                store_id,
                price,
                sku_status,
                supplier_info,
                category_info,
                label_info,
                prohibit_area_info,
                version,
                del_flag,
                created_at,
                created_by,
                changed_at,
                changed_by
    </sql>

    <sql id="Manage_Query_By_Param">
        select
        <include refid="Base_Column_List"/>
        from pms_store_sku_info
        where
        del_flag = 0
        <if test="queryParam.medicineCode != null and queryParam.medicineCode != ''">
            and medicine_code LIKE concat('%',#{queryParam.medicineCode},'%')
        </if>
        <if test="queryParam.skuCode != null and queryParam.skuCode != ''">
            and sku_code = #{queryParam.skuCode}
        </if>
        <if test="queryParam.skuName != null and queryParam.skuName != ''">
            and sku_name LIKE concat('%',#{queryParam.skuName},'%')
        </if>
        <if test="queryParam.skuStatus != null">
            and sku_status = #{queryParam.skuStatus}
        </if>
        <if test="queryParam.storeId != null">
            and store_id = #{queryParam.storeId}
        </if>
        <if test="queryParam.supplierId != null">
            and #{queryParam.supplierId} MEMBER OF (supplier_info)
        </if>
        <if test="queryParam.productType != null">
            and sku_type = #{queryParam.productType}
        </if>
        <if test="queryParam.key != null">
            and (sku_code LIKE concat('%',#{queryParam.key},'%') or sku_name LIKE concat('%',#{queryParam.key},'%') )
        </if>
        order by id desc
    </sql>

    <select id="pageQueryByParam" resultMap="BaseResultMap">
        <include refid="Manage_Query_By_Param"/>
    </select>

    <select id="listQueryByParam" resultMap="BaseResultMap">
        <include refid="Manage_Query_By_Param"/>
    </select>

    <select id="selectOneByCategoryId" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/>
        from pms_store_sku_info
        where del_flag = 0
        and #{categoryId} member of (category_info)
        limit 1
    </select>

    <update id="batchUpdateSkuStatusByCodes">
        update pms_store_sku_info
        set sku_status = #{skuState},
        changed_by = #{operatorId},
        changed_at = now()
        where del_flag = 0
        and sku_code in
        <foreach collection="skuCodeList" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </update>

    <select id="pageQueryStoreSkuInfo" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from pms_store_sku_info
        where del_flag = 0
        and store_id = #{queryParam.store_id}
        and sku_status = #{queryParam.skuStatus}
        and sku_type = #{queryParam.productType}
        <if test="queryParam.key != null and queryParam.key != ''">
            and(
            sku_code LIKE concat('%',#{queryParam.key},'%') or sku_name LIKE concat('%',#{queryParam.key},'%')
            )
        </if>
        order by id desc
    </select>

    <select id="queryStoreSkuInfoByCategory" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from pms_store_sku_info
        where del_flag = 0
        and sku_status = #{skuStatus}
        and FIND_IN_SET(#{categoryId},REPLACE(REPLACE(REPLACE(JSON_UNQUOTE(category_info), '[', ''), ']', ''),' ','') ) > 0
        order by id desc
    </select>

    <select id="queryStoreSkuInfoByCategoryAndType" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from pms_store_sku_info
        where del_flag = 0
        and sku_status = #{skuStatus}
        and store_id in
        <foreach collection="storeIds" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
        <if test="key != null and key != ''">
            and sku_name LIKE concat('%',#{key},'%')
        </if>
        <if test="categoryId != null ">
            and FIND_IN_SET(#{categoryId},REPLACE(REPLACE(REPLACE(JSON_UNQUOTE(category_info), '[', ''), ']', ''),' ','')
            ) > 0
        </if>
        and FIND_IN_SET(#{cityId},REPLACE(REPLACE(REPLACE(JSON_UNQUOTE(prohibit_area_info), '[', ''), ']', ''),' ','') )
        = 0
        order by id desc
    </select>

</mapper>